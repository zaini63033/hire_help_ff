import 'package:flutter/material.dart';import 'package:hire_help_ff/core/app_export.dart';import 'package:hire_help_ff/presentation/homepage_page/homepage_page.dart';import 'package:hire_help_ff/widgets/app_bar/appbar_image.dart';import 'package:hire_help_ff/widgets/app_bar/custom_app_bar.dart';import 'package:hire_help_ff/widgets/custom_bottom_bar.dart';
// ignore_for_file: must_be_immutable
class CleaningServicesScreen extends StatelessWidget {GlobalKey<NavigatorState> navigatorKey = GlobalKey();

@override Widget build(BuildContext context) { return SafeArea(child: Scaffold(backgroundColor: ColorConstant.whiteA700, appBar: CustomAppBar(height: getVerticalSize(69), leadingWidth: 57, leading: AppbarImage(height: getSize(32), width: getSize(32), imagePath: ImageConstant.imgImage4, margin: getMargin(left: 25, top: 25, bottom: 12), onTap: () {onTapImagefour29(context);}), centerTitle: true, title: AppbarImage(height: getVerticalSize(69), width: getHorizontalSize(178), imagePath: ImageConstant.imgHirehelp1137x254), actions: [AppbarImage(height: getVerticalSize(32), width: getHorizontalSize(27), imagePath: ImageConstant.imgImage232x27, margin: getMargin(left: 28, top: 26, right: 28, bottom: 11))]), body: Container(width: getHorizontalSize(364), padding: getPadding(top: 6, bottom: 6), child: Column(crossAxisAlignment: CrossAxisAlignment.start, mainAxisAlignment: MainAxisAlignment.start, children: [Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.black900, endIndent: getHorizontalSize(6)), Padding(padding: getPadding(left: 13, top: 29), child: Row(crossAxisAlignment: CrossAxisAlignment.start, children: [CustomImageView(imagePath: ImageConstant.imgImage1, height: getVerticalSize(36), width: getHorizontalSize(39), margin: getMargin(bottom: 6)), Padding(padding: getPadding(left: 76, top: 6), child: Text("Cleaning", overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtPoppinsMedium24))])), Align(alignment: Alignment.center, child: Padding(padding: getPadding(left: 39, top: 34, right: 41), child: Row(mainAxisAlignment: MainAxisAlignment.center, children: [GestureDetector(onTap: () {onTapColumnbedone(context);}, child: Container(padding: getPadding(left: 28, top: 10, right: 28, bottom: 10), decoration: AppDecoration.outline.copyWith(borderRadius: BorderRadiusStyle.roundedBorder10), child: Column(mainAxisSize: MainAxisSize.min, mainAxisAlignment: MainAxisAlignment.end, children: [CustomImageView(imagePath: ImageConstant.imgBed1, height: getSize(64), width: getSize(64), margin: getMargin(top: 17)), Padding(padding: getPadding(top: 12), child: Text("Room ", overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtLatoMedium17))]))), GestureDetector(onTap: () {onTapColumnfurniture(context);}, child: Container(padding: getPadding(left: 23, top: 13, right: 23, bottom: 13), decoration: AppDecoration.outline.copyWith(borderRadius: BorderRadiusStyle.roundedBorder10), child: Column(mainAxisSize: MainAxisSize.min, crossAxisAlignment: CrossAxisAlignment.start, mainAxisAlignment: MainAxisAlignment.end, children: [CustomImageView(imagePath: ImageConstant.imgFurnitures1, height: getSize(64), width: getSize(64), margin: getMargin(left: 2, top: 11)), Padding(padding: getPadding(top: 12), child: Text("Furniture ", overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtLatoMedium17))])))]))), GestureDetector(onTap: () {onTapColumnkitchenon(context);}, child: Container(padding: getPadding(left: 28, top: 11, right: 28, bottom: 11), decoration: AppDecoration.outline.copyWith(borderRadius: BorderRadiusStyle.roundedBorder10), child: Column(mainAxisSize: MainAxisSize.min, mainAxisAlignment: MainAxisAlignment.end, children: [CustomImageView(imagePath: ImageConstant.imgKitchen1, height: getSize(64), width: getSize(64), margin: getMargin(top: 15)), Padding(padding: getPadding(top: 14), child: Text("Kitchen ", overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtLatoMedium15))])))])), bottomNavigationBar: CustomBottomBar(onChanged: (BottomBarEnum type) {Navigator.pushNamed(navigatorKey.currentContext!, getCurrentRoute(type));}))); } 
///Handling route based on bottom click actions
String getCurrentRoute(BottomBarEnum type) { switch (type) {case BottomBarEnum.Home: return AppRoutes.homepagePage; case BottomBarEnum.Profile: return "/"; case BottomBarEnum.Services: return "/"; case BottomBarEnum.Messages: return "/"; default: return "/";} } 
///Handling page based on route
Widget getCurrentPage(String currentRoute) { switch (currentRoute) {case AppRoutes.homepagePage: return HomepagePage(); default: return DefaultWidget();} } 
onTapColumnbedone(BuildContext context) { Navigator.pushNamed(context, AppRoutes.roomCleaningScreen); } 
onTapColumnfurniture(BuildContext context) { Navigator.pushNamed(context, AppRoutes.furnitureScreen); } 
onTapColumnkitchenon(BuildContext context) { Navigator.pushNamed(context, AppRoutes.kitchenScreen); } 
onTapImagefour29(BuildContext context) { Navigator.pushNamed(context, AppRoutes.menuScreen); } 
 }
