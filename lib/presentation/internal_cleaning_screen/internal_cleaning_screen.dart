import 'package:flutter/material.dart';import 'package:hire_help_ff/core/app_export.dart';import 'package:hire_help_ff/presentation/homepage_page/homepage_page.dart';import 'package:hire_help_ff/widgets/app_bar/appbar_image.dart';import 'package:hire_help_ff/widgets/app_bar/custom_app_bar.dart';import 'package:hire_help_ff/widgets/custom_bottom_bar.dart';import 'package:hire_help_ff/widgets/custom_button.dart';import 'package:hire_help_ff/widgets/custom_text_form_field.dart';
// ignore_for_file: must_be_immutable

// ignore_for_file: must_be_immutable

// ignore_for_file: must_be_immutable

// ignore_for_file: must_be_immutable
class InternalCleaningScreen extends StatelessWidget {TextEditingController rectangleoneController = TextEditingController();

TextEditingController rectangleoneController1 = TextEditingController();

TextEditingController currencyController = TextEditingController();

GlobalKey<NavigatorState> navigatorKey = GlobalKey();

@override Widget build(BuildContext context) { return SafeArea(child: Scaffold(backgroundColor: ColorConstant.whiteA700, resizeToAvoidBottomInset: false, body: Container(width: getHorizontalSize(364), child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Container(width: double.maxFinite, child: Container(padding: getPadding(top: 1, bottom: 1), decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.end, children: [CustomAppBar(height: getVerticalSize(76), leadingWidth: 57, leading: AppbarImage(height: getSize(32), width: getSize(32), imagePath: ImageConstant.imgImage4, margin: getMargin(left: 25, top: 25, bottom: 12), onTap: () {onTapImagefour10(context);}), centerTitle: true, title: AppbarImage(height: getVerticalSize(70), width: getHorizontalSize(178), imagePath: ImageConstant.imgHirehelp1137x254), actions: [AppbarImage(height: getVerticalSize(32), width: getHorizontalSize(27), imagePath: ImageConstant.imgImage232x27, margin: getMargin(left: 28, top: 26, right: 28, bottom: 11))]), Padding(padding: getPadding(top: 6), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.black900, endIndent: getHorizontalSize(5)))]))), Container(height: getVerticalSize(637), width: getHorizontalSize(364), child: Stack(alignment: Alignment.center, children: [Align(alignment: Alignment.topCenter, child: Padding(padding: getPadding(left: 13, top: 24, right: 22, bottom: 73), child: Column(mainAxisSize: MainAxisSize.min, mainAxisAlignment: MainAxisAlignment.start, children: [Row(mainAxisAlignment: MainAxisAlignment.center, crossAxisAlignment: CrossAxisAlignment.start, children: [CustomImageView(imagePath: ImageConstant.imgImage1, height: getVerticalSize(36), width: getHorizontalSize(39), margin: getMargin(bottom: 4)), Padding(padding: getPadding(left: 38, top: 8, bottom: 2), child: Text("Internal Cleaning", overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtLatoMedium24)), CustomImageView(imagePath: ImageConstant.imgInformation1, height: getSize(39), width: getSize(39), margin: getMargin(left: 32, top: 1))]), Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 14, top: 12), child: Text("Car Model", overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtPoppinsMedium14))), CustomTextFormField(focusNode: FocusNode(), controller: rectangleoneController, margin: getMargin(left: 14, top: 3, right: 9)), Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 14, top: 14), child: Text("Additional Information", overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtPoppinsMedium14))), CustomTextFormField(focusNode: FocusNode(), controller: rectangleoneController1, margin: getMargin(left: 14, top: 3, right: 8)), Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 15, top: 12), child: Text("Offer Price", overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtPoppinsMedium14))), CustomTextFormField(focusNode: FocusNode(), controller: currencyController, hintText: "Rs", margin: getMargin(left: 15, top: 3, right: 8), textInputAction: TextInputAction.done), Spacer(), CustomButton(text: "Add More Services", margin: getMargin(left: 16, right: 11), variant: ButtonVariant.GradientAmber600Yellow800, fontStyle: ButtonFontStyle.LatoBlack16, onTap: () {onTapAddmore(context);}), CustomButton(text: "Next", margin: getMargin(left: 17, top: 33, right: 10), fontStyle: ButtonFontStyle.LatoBlack16, onTap: () {onTapNext(context);})]))), Align(alignment: Alignment.center, child: Container(height: getVerticalSize(790), width: getHorizontalSize(363)))]))])), bottomNavigationBar: CustomBottomBar(onChanged: (BottomBarEnum type) {Navigator.pushNamed(navigatorKey.currentContext!, getCurrentRoute(type));}))); } 
///Handling route based on bottom click actions
String getCurrentRoute(BottomBarEnum type) { switch (type) {case BottomBarEnum.Home: return AppRoutes.homepagePage; case BottomBarEnum.Profile: return "/"; case BottomBarEnum.Services: return "/"; case BottomBarEnum.Messages: return "/"; default: return "/";} } 
///Handling page based on route
Widget getCurrentPage(String currentRoute) { switch (currentRoute) {case AppRoutes.homepagePage: return HomepagePage(); default: return DefaultWidget();} } 
onTapImagefour10(BuildContext context) { Navigator.pushNamed(context, AppRoutes.menuScreen); } 
onTapAddmore(BuildContext context) { Navigator.pushNamed(context, AppRoutes.homepageContainerScreen); } 
onTapNext(BuildContext context) { Navigator.pushNamed(context, AppRoutes.nextScreen); } 
 }
